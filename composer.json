{
  "name": "eseperio/verifactu-php",
  "description": "Librería para la integración del sistema de la agencia tributaria española \"Veri*factu\" (verifactu)",
  "type": "library",
  "require": {
    "bacon/bacon-qr-code": "^3",
    "robrichards/xmlseclibs": "^3.0",
    "php": ">=8.1",
    "ext-soap": "*",
    "ext-libxml": "*",
    "ext-openssl": "*",
    "ext-dom": "*",
    "vlucas/phpdotenv": "^5.5"
  },
  "require-dev": {
    "phpunit/phpunit": "^10.0",
    "phpstan/phpstan": "2.1.x-dev"
  },
  "license": "MIT",
  "autoload": {
    "psr-4": {
      "eseperio\\verifactu\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "eseperio\\verifactu\\tests\\": "tests/"
    }
  },
  "authors": [
    {
      "name": "E.Alamo",
      "email": "erosdelalamo@gmail.com"
    }
  ],
  "minimum-stability": "dev",
  "scripts": {
    "check-env": "php -r \"if (!file_exists('.env') && file_exists('.env.example')) { copy('.env.example', '.env'); echo PHP_EOL . '⚠️  No .env file found. Created from .env.example. Please edit .env with your certificate details.' . PHP_EOL . PHP_EOL; }\"",
    "test": [
      "@check-env",
      "phpunit"
    ],
    "test-readme": [
      "@check-env",
      "phpunit tests/Unit/Examples/"
    ],
    "test-verifactu": [
      "@check-env",
      "phpunit tests/Verifactu/"
    ],
    "test-unit": [
      "@check-env",
      "phpunit --testsuite=Unit"
    ],
    "test-sandbox": [
      "@check-env",
      "phpunit --testsuite=Integration"
    ],
    "coverage": [
      "@check-env",
      "phpunit --coverage-html var/coverage/html"
    ],
    "phpstan": "phpstan analyse",
    "phpstan-baseline": "phpstan analyse --generate-baseline",
    "cs-fix": "php-cs-fixer fix",
    "cs-check": "php-cs-fixer fix --dry-run --diff",
    "rector": "rector process",
    "rector-dry": "rector process --dry-run",
    "quality": [
      "@cs-check",
      "@phpstan",
      "@test"
    ],
    "quality-fix": [
      "@cs-fix",
      "@rector",
      "@test"
    ]
  },
  "scripts-descriptions": {
    "test": "Run the unit tests using PHPUnit",
    "test-readme": "Test that README.md examples work correctly",
    "test-unit": "Run all unit tests",
    "coverage": "Generate test coverage report",
    "phpstan": "Run PHPStan static analysis",
    "phpstan-baseline": "Generate PHPStan baseline file",
    "cs-fix": "Fix code style issues using PHP CS Fixer",
    "cs-check": "Check code style using PHP CS Fixer (dry run)",
    "rector": "Apply Rector refactoring",
    "rector-dry": "Preview Rector refactoring (dry run)",
    "quality": "Run all quality checks (style, static analysis, tests)",
    "quality-fix": "Fix all quality issues and run tests"
  }
}
